GHex 4 pre-alpha information
============================

GHex 4 is currently in pre-alpha state.  As it has been substantially reworked
from GHex 3.x and, as of the time of writing, has only been recently merged to
the `master` branch (December 2021), it will require some substantial testing
and translation updates.

Visibly to the end user, some new features include:

 - More modern and up-to-date look and feel, consistent with the GNOME HIG.

 - Tabbed interface.

 - Dark Mode (by default, the GTK system default is used, but can be
   overridden with a checkbox and a switch in the Preferences dialog).

 - libadwaita colour compatibility; if you use the Adwaita theme and GNOME
   apps that utilize libadwaita, GHex will match the colour scheme. libadwaita
   is not a planned dependency for GHex at this time as many of its users are
   GTK users who do not run GNOME, and I want to keep GHex's dependency
   requirements to a minimum.

 - Custom clipboard data, for less error-prone copying and pasting of binary
   data; this will fall back to plaintext when unavailable.

 - Copy and Paste Special dialogs, which allow you to, for instance, copy and
   paste hex pairs from GHex into other applications, and from other
   applications into GHex.

I'll break up the known issues into two categories:  items I would consider to
be blockers for a beta, blockers for stable release, and other known issues,
which will be earmarked for priority after the first stable release of GHex 4.

I have no more blockers for alpha. The first alpha will be released shortly
after a minor cleanup.

Blockers for beta:

 - HexBufferIface: Implement asynchronous API for read/save operations.

Blockers for stable release:

 - Implementation of some missing keybindings.

 - Improvement of some redraw issues, at least on X11 (if you experience this,
   try just slightly resizing the window).

 - The offsets column shows some spurious lines when a file is first loaded.
   This can be cleared by clicking anywhere on the hex widget to clear it.

Other known issues to be addressed in a future version:

 - Memory-mapping:  I have started work on a memory-mapping backend for the
   HexBuffer interface. This will at least be available as an experimental
   compile-time feature by beta, but I cannot guarantee it will be enabled by
   default or swappable on the fly for the first stable release of GHex 4.

 - Users have requested other features as well. Some will be implemented, some
   will not, and some will be taken under advisement.
   See https://gitlab.gnome.org/GNOME/ghex/-/issues for some discussions.

(Logan Rathbone <poprocks@gmail.com>)
